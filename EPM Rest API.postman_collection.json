{
	"info": {
		"_postman_id": "f3a991c8-d111-498b-83c4-a06fb854ab2d",
		"name": "EPM Rest API",
		"description": "The EPM API commands enable you to implement CyberArkâ€™s Web Services SDK. The following sections describe how to use them.\r\n\r\n######v11.6\r\n*EPM authentication\r\n*Windows authentication\r\n*Get EPM version\r\n*Get sets list\r\n*Get aggregated events\r\n*Get raw events\r\n*Get raw event details\r\n*Get admin audit data\r\n*Create policy\r\n*Get policies\r\n*Get policy details\r\n*Update policy\r\n*Delete policy\r\n*Get computer groups\r\n*Get computers\r\n*Update ransomware mode",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EPM Authentication",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Username\":\"{{Username}}\",\r\n    \"Password\":\"{{Password\",\r\n    \"ApplicationID\":\"{{ApplicationID\"\r\n}"
				},
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Auth/EPM/Logon",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Auth",
						"EPM",
						"Logon"
					]
				},
				"description": "This method authenticates a user to EPM using username and password and returns a token that can be used in subsequent Rest API calls.\r\n\r\nAfter the configured timeout expires, users have to log on again using their username and password.\r\n\r\nThe session timeout for all APIs is part of the session token and is defined by the Timeout for inactive session Server Configuration parameter."
			},
			"response": []
		},
		{
			"name": "Windows Authentication",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"ApplicationID\":\"{{ApplicationID}}\"\r\n}"
				},
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Auth/Windows/Logon",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Auth",
						"Windows",
						"Logon"
					]
				},
				"description": "This method authenticates a user to EPM by Windows authentication and returns a token that can be used in subsequent web services calls.\r\n\r\nAfter the configured timeout expires, users have to log on again using their username and password."
			},
			"response": []
		},
		{
			"name": "Get EPM version",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Server/Version",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Server",
						"Version"
					]
				},
				"description": "This method enables the user to retrieve the EPM version."
			},
			"response": []
		},
		{
			"name": "Get sets list",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "basic {{AuthToken}}",
						"description": "Required after logging in via EPM Authentication",
						"type": "text"
					},
					{
						"key": "VFUser",
						"value": "{{AuthToken}}",
						"description": "Required after logging in via Windows Authentication",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets"
					]
				},
				"description": "This method enables the user to retrieve the list of Sets."
			},
			"response": []
		},
		{
			"name": "Get aggregated events",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthTolen}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{setId}}/Events/{{Category}}?Offset={{Offset}}&Limit={{Limit}}&EventType={{EventType}}&Publisher={{Publisher}}&DateFrom={{DateFrom}}&DateTo={{DateTo}}&Justification={{Justification}}&ApplicationType={{ApplicationType}}&PolicyName={{PolicyName}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{setId}}",
						"Events",
						"{{Category}}"
					],
					"query": [
						{
							"key": "Offset",
							"value": "{{Offset}}",
							"description": "Number of events to skip\nType: Number\nValid value: 0 (zero) or higher\nDefault value: 0\nMandatory: No"
						},
						{
							"key": "Limit",
							"value": "{{Limit}}",
							"description": "Maximum number of events to return\nType: Number\nValid value: 1-100\nMandatory: No"
						},
						{
							"key": "EventType",
							"value": "{{EventType}}",
							"description": "Event type. Specify All or a list of event types separated by commas.\nFor the list of event types, see Event Types.\nType: String\nValid values: All\nMandatory: No"
						},
						{
							"key": "Publisher",
							"value": "{{Publisher}}",
							"description": "Digital signature of the application that triggered the event (if applicable). Wildcards and unsigned are supported.\nType: String\nValid values: The following wildcards:\n\"xxx xxx\" - filters the exact value between the quotes\nxxx xxx - filters anything that contains the string\n*xxx xxx* - filters anything that contains the string between the *\nxxx* - filters all strings that start with the value before the *\n*xxx - filters all strings that end with the value after the *\nMandatory: No"
						},
						{
							"key": "DateFrom",
							"value": "{{DateFrom}}",
							"description": "Only show events since the given date\nType: Date\nValid values: ISO-8601 to format dates and UTC time zone - YYYY-MM-DDThh:mm:ssZ\nIf DateFrom and DateTo are not valued, only events from the last day are returned\nMandatory: No"
						},
						{
							"key": "DateTo",
							"value": "{{DateTo}}",
							"description": "Only show events until the given date\nType: Date\nValid values: ISO-8601 to format dates and UTC time zone - YYYY-MM-DDThh:mm:ssZ\nIf DateFrom and DateTo are not valued, only events from the last day are returned\nMandatory: No"
						},
						{
							"key": "Justification",
							"value": "{{Justification}}",
							"description": "Determines if the event has justification details\nNot relevant for ThreatDetection\nType: String\nValid values: All/WithJustification\nDefault values: All\nMandatory: No"
						},
						{
							"key": "ApplicationType",
							"value": "{{ApplicationType}}",
							"description": "Type of application that triggers the event. Specify All or a list of application types separated by commas.\nNot relevant for ThreatDetection\nType: String\nValid values: Executable, Script, MSI, MSU, ActiveX, Com, Win8App, DLL, DMG (for PolicyAudit only), PKG (for PolicyAudit only)\nDefault values: All\nMandatory: No"
						},
						{
							"key": "PolicyName",
							"value": "{{PolicyName}}",
							"description": "Name of the policy that triggers the event. Wildcards are supported.\nNot relevant for ApplicationEvents\nType: String\nValid values: The following wildcards:\n\"xxx xxx\" - filters the exact value between the quotes\nxxx xxx - filters anything that contains the string\n*xxx xxx* - filters anything that contains the string between the *\nxxx* - filters all strings that start with the value before the *\n*xxx - filters all strings that end with the value after the *\nMandatory: No"
						}
					]
				},
				"description": "This method enables the user to retrieve aggregated events from EPM according to a predefined filter.\r\n\r\nEvent Types          \r\n\r\nThreatDetection: Attack, SuspiciousActivity\r\n\r\nApplicationEvents: ElevationRequest, Trust, Installation, Launch, ManualRequest, Block, Access, Ransomware\r\n\r\nPolicyAudit: Trust, Installation, Launch, Block, Access, StartElevated, Compute"
			},
			"response": []
		},
		{
			"name": "Get raw events",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthTolen}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{setId}}/Events/{{Category}}/{{FileQualifier}}?Offset={{Offset}}&Limit={{Limit}}&EventType={{EventType}}&Publisher={{Publisher}}&DateFrom={{DateFrom}}&DateTo={{DateTo}}&Justification={{Justification}}&ApplicationType={{ApplicationType}}&PolicyName={{PolicyName}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{setId}}",
						"Events",
						"{{Category}}",
						"{{FileQualifier}}"
					],
					"query": [
						{
							"key": "Offset",
							"value": "{{Offset}}",
							"description": "Number of events to skip\nType: Number\nValid value: 0 (zero) or higher\nDefault value: 0\nMandatory: No"
						},
						{
							"key": "Limit",
							"value": "{{Limit}}",
							"description": "Maximum number of events to return\nType: Number\nValid value: 1-100\nMandatory: No"
						},
						{
							"key": "EventType",
							"value": "{{EventType}}",
							"description": "Event type. Specify All or a list of event types separated by commas.\nFor the list of event types, see Event Types.\nType: String\nValid values: All\nMandatory: No"
						},
						{
							"key": "Publisher",
							"value": "{{Publisher}}",
							"description": "Digital signature of the application that triggered the event (if applicable). Wildcards and unsigned are supported.\nType: String\nValid values: The following wildcards:\n\"xxx xxx\" - filters the exact value between the quotes\nxxx xxx - filters anything that contains the string\n*xxx xxx* - filters anything that contains the string between the *\nxxx* - filters all strings that start with the value before the *\n*xxx - filters all strings that end with the value after the *\nMandatory: No"
						},
						{
							"key": "DateFrom",
							"value": "{{DateFrom}}",
							"description": "Only show events since the given date\nType: Date\nValid values: ISO-8601 to format dates and UTC time zone - YYYY-MM-DDThh:mm:ssZ\nIf DateFrom and DateTo are not valued, only events from the last day are returned\nMandatory: No"
						},
						{
							"key": "DateTo",
							"value": "{{DateTo}}",
							"description": "Only show events until the given date\nType: Date\nValid values: ISO-8601 to format dates and UTC time zone - YYYY-MM-DDThh:mm:ssZ\nIf DateFrom and DateTo are not valued, only events from the last day are returned\nMandatory: No"
						},
						{
							"key": "Justification",
							"value": "{{Justification}}",
							"description": "Determines if the event has justification details\nNot relevant for ThreatDetection\nType: String\nValid values: All/WithJustification\nDefault values: All\nMandatory: No"
						},
						{
							"key": "ApplicationType",
							"value": "{{ApplicationType}}",
							"description": "Type of application that triggers the event. Specify All or a list of application types separated by commas.\nNot relevant for ThreatDetection\nType: String\nValid values: Executable, Script, MSI, MSU, ActiveX, Com, Win8App, DLL, DMG (for PolicyAudit only), PKG (for PolicyAudit only)\nDefault values: All\nMandatory: No"
						},
						{
							"key": "PolicyName",
							"value": "{{PolicyName}}",
							"description": "Name of the policy that triggers the event. Wildcards are supported.\nNot relevant for ApplicationEvents\nType: String\nValid values: The following wildcards:\n\"xxx xxx\" - filters the exact value between the quotes\nxxx xxx - filters anything that contains the string\n*xxx xxx* - filters anything that contains the string between the *\nxxx* - filters all strings that start with the value before the *\n*xxx - filters all strings that end with the value after the *\nMandatory: No"
						}
					]
				},
				"description": "This method enables the user to retrieve raw events from EPM according to a predefined filter.\r\n\r\nEvent Types          \r\n\r\nThreatDetection: Attack, SuspiciousActivity\r\n\r\nApplicationEvents: ElevationRequest, Trust, Installation, Launch, ManualRequest, Block, Access, Ransomware\r\n\r\nPolicyAudit: Trust, Installation, Launch, Block, Access, StartElevated, Compute"
			},
			"response": []
		},
		{
			"name": "Get raw event details",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthTolen}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{setId}}/Events/{{Category}}/Raw/{{EventID}}?Computer={{Computer}}&FileQualifier={{FileQualifier}}&FileName={{FileName}}&Publisher={{Publisher}}&Hash={{Hash}}&FilePath={{FilePath}}&Company={{Company}}&FileDescription={{FileDescription}}&ProductName={{ProductName}}&ProductVersion={{ProductVersion}}&SourceType={{SourceType}}&SourceName={{SourceName}}&PreHistorySourceType={{PreHistorySourceType}}&PreHistorySourceName={{PreHistorySourceName}}&FileSize={{FileSize}}&Package={{Package}}&FileVersion={{FileVersion}}&ModificationTime={{ModificationTime}}&User={{User}}&UserIsAdmin={{UserIsAdmin}}&TimeFirst={{TimeFirst}}&TimeLast={{TimeLast}}&EventType={{EventType}}&AgentEventCount={{AgentEventCount}}&Justification={{Justification}}&AccessAction={{AccessAction}}&AccessTargetType={{AccessTargetType}}&AccessTargetName={{AccessTargetName}}&PolicyCategory={{PolicyCategory}}&PolicyName={{PolicyName}}&ThreatDetectionAction={{ThreatDetectionAction}}&ProcessCommandLine={{ProcessCommandLine}}&ProcessCertificateIssuer={{ProcessCertificateIssuer}}&SourceProcessCommandLine={{SourceProcessCommandLine}}&SourceProcessUsername={{SourceProcessUsername}}&SourceProcessHash={{SourceProcessHash}}&SourceProcessPublisher={{SourceProcessPublisher}}&SourceProcessCertificateIssuer={{SourceProcessCertificateIssuer}}&ExposedUsers={{ExposedUsers}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{setId}}",
						"Events",
						"{{Category}}",
						"Raw",
						"{{EventID}}"
					],
					"query": [
						{
							"key": "Computer",
							"value": "{{Computer}}",
							"description": "Computer where the event was triggered\nType: String\nCategory: All"
						},
						{
							"key": "FileQualifier",
							"value": "{{FileQualifier}}",
							"description": "Unique file identifier\nType: String\nCategory: All"
						},
						{
							"key": "FileName",
							"value": "{{FileName}}",
							"description": "Name of the file that triggered the event\nType: String\nCategory: All"
						},
						{
							"key": "Publisher",
							"value": "{{Publisher}}",
							"description": "Digital signature of the application that triggered the event (if applicable)\nType: String\nCategory: All"
						},
						{
							"key": "Hash",
							"value": "{{Hash}}",
							"description": "SHA1 of the application that triggered the event\nType: String\nCategory: All"
						},
						{
							"key": "FilePath",
							"value": "{{FilePath}}",
							"description": "Path of the file that triggered the event\nType: String\nCategory: All"
						},
						{
							"key": "Company",
							"value": "{{Company}}",
							"description": "Company name of the file that triggered the event\nType: String\nCategory: All"
						},
						{
							"key": "FileDescription",
							"value": "{{FileDescription}}",
							"description": "File description of the file that triggered the event\nType: String\nCategory: All"
						},
						{
							"key": "ProductName",
							"value": "{{ProductName}}",
							"description": "Product name of the file that triggered the event\nType: String\nCategory: All"
						},
						{
							"key": "ProductVersion",
							"value": "{{ProductVersion}}",
							"description": "Product version of the file that triggered the event\nType: String\nCategory: All"
						},
						{
							"key": "SourceType",
							"value": "{{SourceType}}",
							"description": "Type of the origin where the file that triggered the last event was acquired\nValid values:\nUnknown\nOldApplication\nInternet\nUpdater\nNetworkShare\nRemovableDrive\nCDRom\nWindows\nLocalDisk\nEPM\nLocalShare\nEmail\nDeveloperApp\nType: String\nCategory: PolicyAudit/ApplicationEvents"
						},
						{
							"key": "SourceName",
							"value": "{{SourceName}}",
							"description": "Source of the origin where the file that triggered the event was acquired\n\nType: String\n\nCategory: PolicyAudit/ApplicationEvents"
						},
						{
							"key": "PreHistorySourceType",
							"value": "{{PreHistorySourceType}}",
							"description": "Source type of the origin where the file that triggered the event was acquired\n\nValid values:\n\nUnknown\nOldApplication\nInternet\nUpdater\nNetworkShare\nRemovableDrive\nCDRom\nWindows\nLocalDisk\nEPM\nLocalShare\nEmail\nDeveloperApp\nType: String\n\nCategory: PolicyAudit/ApplicationEvents"
						},
						{
							"key": "PreHistorySourceName",
							"value": "{{PreHistorySourceName}}",
							"description": "Source name of the origin where the file that triggered the event was acquired\n\nType: String\n\nCategory: PolicyAudit/ApplicationEvents"
						},
						{
							"key": "FileSize",
							"value": "{{FileSize}}",
							"description": "Size of the file that triggered the event\n\n-1 means that the size is unavailable\n\nType: Number\n\nCategory: All"
						},
						{
							"key": "Package",
							"value": "{{Package}}",
							"description": "Installation package or executable that created the file that triggered the event\n\nType: String\n\nCategory: All"
						},
						{
							"key": "FileVersion",
							"value": "{{FileVersion}}",
							"description": "Version of the file that triggered the event\n\nType: String\n\nCategory: All"
						},
						{
							"key": "ModificationTime",
							"value": "{{ModificationTime}}",
							"description": "Last time the file that triggered the event was changed\n\nISO-8601 to format dates and UTC time zone - YYYY-MM-DDThh:mm:ssZ\n\nType: Date\n\nCategory: All"
						},
						{
							"key": "User",
							"value": "{{User}}",
							"description": "User who triggered the event\n\nType: String\n\nCategory: All"
						},
						{
							"key": "UserIsAdmin",
							"value": "{{UserIsAdmin}}",
							"description": "If the user who triggered the event is a local administrator\n\nType: Boolean\n\nCategory: PolicyAudit/ApplicationEvents"
						},
						{
							"key": "TimeFirst",
							"value": "{{TimeFirst}}",
							"description": "First time the event was triggered. If AgentEventCount =1, TimeFirst will be identical to TimeLast\n\nISO-8601 to format dates and UTC time zone - YYYY-MM-DDThh:mm:ssZ\n\nType: DateTime\n\nCategory: All"
						},
						{
							"key": "TimeLast",
							"value": "{{TimeLast}}",
							"description": "Last time the event was triggered. If AgentEventCount =1, TimeFirst will be identical to TimeLast\n\nISO-8601 to format dates and UTC time zone - YYYY-MM-DDThh:mm:ssZ\n\nType: DateTime\n\nCategory: All"
						},
						{
							"key": "EventType",
							"value": "{{EventType}}",
							"description": "Event type\n\nFor the list of event types, see the Event Type table\n\nType: String\n\nCategory: All"
						},
						{
							"key": "AgentEventCount",
							"value": "{{AgentEventCount}}",
							"description": "Number of identical events that occurred during the aggregation period\n\nType: Number\n\nCategory: All"
						},
						{
							"key": "Justification",
							"value": "{{Justification}}",
							"description": "Justification provided by the user when the event was triggered\n\nType: String\n\nCategory: All"
						},
						{
							"key": "AccessAction",
							"value": "{{AccessAction}}",
							"description": "If the restrict event action is allow or restrict. This is relevant for Restrict events only.\n\nType: String\n\nCategory: PolicyAudit/ApplicationEvents"
						},
						{
							"key": "AccessTargetType",
							"value": "{{AccessTargetType}}",
							"description": "Type of the accessed resource. This is rRelevant for Restrict events only.\n\nValid values:\n\nRegistry\nFile\nProcessMemory\nNetworkShare\nInternet\nIntranet\nType: String\n\nCategory: PolicyAudit/ApplicationEvents"
						},
						{
							"key": "AccessTargetName",
							"value": "{{AccessTargetName}}",
							"description": "Name of the accessed resource. This is relevant for Restrict events only.\n\nType: String\n\nCategory: PolicyAudit/ApplicationEvents"
						},
						{
							"key": "PolicyCategory",
							"value": "{{PolicyCategory}}",
							"description": "Threat detection policy category that triggered the event\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "PolicyName",
							"value": "{{PolicyName}}",
							"description": "Threat detection policy that triggered the event\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "ThreatDetectionAction",
							"value": "{{ThreatDetectionAction}}",
							"description": "Block or Detect action taken by EPM when the event occurred\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "ProcessCommandLine",
							"value": "{{ProcessCommandLine}}",
							"description": "Process creation command line that triggered the event\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "ProcessCertificateIssuer",
							"value": "{{ProcessCertificateIssuer}}",
							"description": "Certificate issuer for the publisher of the application that triggered the event\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "SourceProcessCommandLine",
							"value": "{{SourceProcessCommandLine}}",
							"description": "Initiating process creation command line that triggered the event\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "SourceProcessUsername",
							"value": "{{SourceProcessUsername}}",
							"description": "User name of the initiating process that triggered the event\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "SourceProcessHash",
							"value": "{{SourceProcessHash}}",
							"description": "Hash of the initiating process that triggered the event\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "SourceProcessPublisher",
							"value": "{{SourceProcessPublisher}}",
							"description": "Publisher of the initiating process that triggered the event\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "SourceProcessCertificateIssuer",
							"value": "{{SourceProcessCertificateIssuer}}",
							"description": "Certificate issuer for the publisher of the initiating process that triggered the event\n\nType: String\n\nCategory: ThreatDetection"
						},
						{
							"key": "ExposedUsers",
							"value": "{{ExposedUsers}}",
							"description": "List of users exposed or protected in the attack\n\nType: String\n\nCategory: ThreatDetection"
						}
					]
				},
				"description": "This method enables the user to retrieve raw events from EPM according to a predefined filter.\r\n\r\nEvent Types          \r\n\r\nThreatDetection: Attack, SuspiciousActivity\r\n\r\nApplicationEvents: ElevationRequest, Trust, Installation, Launch, ManualRequest, Block, Access, Ransomware\r\n\r\nPolicyAudit: Trust, Installation, Launch, Block, Access, StartElevated, Compute"
			},
			"response": []
		},
		{
			"name": "Get admin audit data",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{setId}}/AdminAudit?DateFrom={{DateFrom}}&DateTo={{DateTo}}&Offset={{Offset}}&Limit={{Limit}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{setId}}",
						"AdminAudit"
					],
					"query": [
						{
							"key": "DateFrom",
							"value": "{{DateFrom}}",
							"description": "Only include events since the given date\n\nType: Date\n\nValid values: ISO-8601 to format dates and UTC time zone - YYYY-MM-DDThh:mm:ssZ\n\nIf DateFrom and DateTo are not set, only events from the last day are returned\n\nIf only DateFrom is set, all events from that date are returned\n\nMandatory: No"
						},
						{
							"key": "DateTo",
							"value": "{{DateTo}}",
							"description": "Only include events until the given date\n\nType: Date\n\nValid values: ISO-8601 to format dates and UTC time zone - YYYY-MM-DDThh:mm:ssZ\n\nIf DateFrom and DateTo are not set, only events from the last day are returned\n\nIf only DateTo is set, all events until that date are returned\n\nMandatory: No"
						},
						{
							"key": "Offset",
							"value": "{{Offset}}",
							"description": "Number of events to skip\n\nType: Number\n\nValid values: 0 (zero) or higher\n\nDefault value: 0\n\nMandatory: No"
						},
						{
							"key": "Limit",
							"value": "{{Limit}}",
							"description": "Maximum number of events to return\n\nType: Number\n\nValid values: Higher than 0 (zero)\n\nDefault value: 50\n\nMandatory: No"
						}
					]
				},
				"description": "This method enables users to retrieve the full list of actions carried out by EPM administrators."
			},
			"response": []
		},
		{
			"name": "Create policy - Advanced Policy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"PolicyType\":\"string\",\r\n    \"Name\":\"string\",\r\n    \"Action\":\"string\",\r\n    \"Activation\":{\r\n    \"Enabled\": true,\r\n    \"DeactivateDate\":{\r\n        \"Year\":yyyy,\r\n        \"Month\":mm,\r\n        \"Day\":dd,\r\n        \"Hours\":hh,\r\n        \"Minutes\":mm,\r\n        \"Seconds\":ss\r\n    }\r\n },\r\n    \"IncludeComputersInSet\":[\r\n        {\r\n        \"Id\":\"string\"\r\n        }\r\n    ],\r\n     \"ExcludeComputersInSet\":[\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeComputerGroups\":[\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"ExcludeComputerGroups\":[\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeUsers\":[\r\n        {\r\n           \"UserName\":\"string\",\r\n        }\r\n    ],\r\n    \"IncludeUserGroups\":[\r\n        {\r\n            \"Sid\":\"string\"\r\n        },\r\n        {\r\n            \"GroupName\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeADComputerGroups\":[\r\n        {\r\n            \"GroupName\":\"string\"\r\n        }\r\n    ],\r\n    \"ExcludeADComputerGroups\":[\r\n        {\r\n            \"Sid\":\"string\"\r\n        }\r\n    ],\r\n    \"Applications\":[\r\n        {\r\n            \"Type\":\"string\",\r\n            \"Checksum\":\"string\",\r\n            \"FileName\":\"string\",\r\n            \"FileSize\":number,\r\n            \"Location\":\"string\"\r\n        },\r\n        {\r\n            \"Type\":\"string\",\r\n            \"Description\":\"string\",\r\n            \"FileName\":\"string\",\r\n            \"FileNameCompare\":\"string\",\r\n            \"Location\":\"string\",\r\n            \"Signature\":\"string\",\r\n            \"SignatureCompare\": \"Prefix\"\r\n        },\r\n        {\r\n            \"Type\":\"string\",\r\n            \"Location\":\"string\",\r\n            \"LocationCompare\":\"string\",\r\n            \"FileName\":\"string\",\r\n            \"Owner\":\"string\",\r\n            \"MinFileVersion\":\"string\",\r\n            \"MaxFileVersion\":\"string\"\r\n         }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/Policies",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"Policies"
					]
				},
				"description": "This method creates a new policy."
			},
			"response": []
		},
		{
			"name": "Create policy - Just in Time Access and Elevation Policy",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Duration\":number,\r\n    \"PolicyType\":\"string\",\r\n    \"Name\":\"string\",\r\n    \"Audit\":boolean,\r\n    \"Justification\":\"string\",\r\n    \"TerminateProcesses\":boolean,\r\n    \"IncludeUsers\": [\r\n        {\r\n            \"UserName\":\"string\",\r\n            \"Sid\":\"\"\r\n        }\r\n    ],\r\n    \"IncludeComputersInSet\": [\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeComputerGroups\":[\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeADComputerGroups\": [\r\n        {\r\n             \"GroupName\":\"string\",\r\n             \"Sid\":\"\"\r\n        }\r\n    ],\r\n    \"LocalGroups\": [\r\n        {\r\n            \"GroupName\":\"string\"\r\n        }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/Policies",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"Policies"
					]
				},
				"description": "This method creates a new policy."
			},
			"response": []
		},
		{
			"name": "Get policies",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/Policies?Offset={{Offset}}&Limit={{Limit}}&PolicyType={{PolicyType}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"Policies"
					],
					"query": [
						{
							"key": "Offset",
							"value": "{{Offset}}",
							"description": "Number of sets to skip\n\nType: Number\n\nValid value: 0 (zero) or higher\n\nDefault value: 0\n\nMandatory: No"
						},
						{
							"key": "Limit",
							"value": "{{Limit}}",
							"description": "Maximum number of sets to return\n\nType: Number\n\nValid value: Lower than 100\n\nMandatory: No"
						},
						{
							"key": "PolicyType",
							"value": "{{PolicyType}}",
							"description": "A query that sets the type of the policy to retrieve. See Policy types for a list of policy types.\n\nType: String\n\nValid value: Either of the following:\n\n'eq' - equals\n\n'in' - includes\n\nDefault value: Blank - include all policy types.\n\nMandatory: No"
						}
					]
				},
				"description": "This method retrieves the policies according to a predefined filter."
			},
			"response": []
		},
		{
			"name": "Get policy details",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/Policies/{{PolicyId}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"Policies",
						"{{PolicyId}}"
					]
				},
				"description": "This method retrieves the supported fields of a Policy."
			},
			"response": []
		},
		{
			"name": "Update policy - For Windows Advanced Policy only - \"AdvancedWinApp\" Policy type",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"PolicyType\":\"string\",\r\n    \"Name\":\"string\",\r\n    \"Action\":\"string\",\r\n    \"Activation\":{\r\n    \"Enabled\": true,\r\n    \"DeactivateDate\":{\r\n        \"Year\":yyyy,\r\n        \"Month\":mm,\r\n        \"Day\":dd,\r\n        \"Hours\":hh,\r\n        \"Minutes\":mm,\r\n        \"Seconds\":ss\r\n    }\r\n },\r\n    \"IncludeComputersInSet\":[\r\n        {\r\n        \"Id\":\"string\"\r\n        }\r\n    ],\r\n     \"ExcludeComputersInSet\":[\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeComputerGroups\":[\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"ExcludeComputerGroups\":[\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeUsers\":[\r\n        {\r\n           \"UserName\":\"string\",\r\n        }\r\n    ],\r\n    \"IncludeUserGroups\":[\r\n        {\r\n            \"Sid\":\"string\"\r\n        },\r\n        {\r\n            \"GroupName\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeADComputerGroups\":[\r\n        {\r\n            \"GroupName\":\"string\"\r\n        }\r\n    ],\r\n    \"ExcludeADComputerGroups\":[\r\n        {\r\n            \"Sid\":\"string\"\r\n        }\r\n    ],\r\n    \"Applications\":[\r\n        {\r\n            \"Type\":\"string\",\r\n            \"Checksum\":\"string\",\r\n            \"FileName\":\"string\",\r\n            \"FileSize\":number,\r\n            \"Location\":\"string\"\r\n        },\r\n        {\r\n            \"Type\":\"string\",\r\n            \"Description\":\"string\",\r\n            \"FileName\":\"string\",\r\n            \"FileNameCompare\":\"string\",\r\n            \"Location\":\"string\",\r\n            \"Signature\":\"string\",\r\n            \"SignatureCompare\": \"Prefix\"\r\n        },\r\n        {\r\n            \"Type\":\"string\",\r\n            \"Location\":\"string\",\r\n            \"LocationCompare\":\"string\",\r\n            \"FileName\":\"string\",\r\n            \"Owner\":\"string\",\r\n            \"MinFileVersion\":\"string\",\r\n            \"MaxFileVersion\":\"string\"\r\n         }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/Policies/{{PolicyId}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"Policies",
						"{{PolicyId}}"
					]
				},
				"description": "This method updates a policy with new values of various fields."
			},
			"response": []
		},
		{
			"name": "Update policy - For JIT Access and Elevation Policy only - \"AdHocElevate\" Policy type",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Enabled\":boolean,\r\n    \"Duration\":number,\r\n    \"PolicyType\":\"string\",\r\n    \"Name\":\"string\",\r\n    \"Audit\":boolean,\r\n    \"Justification\":\"string\",\r\n    \"TerminateProcesses\":boolean,\r\n    \"IncludeUsers\": [\r\n        {\r\n            \"UserName\":\"string\",\r\n            \"Sid\":\"\"\r\n        }\r\n    ],\r\n    \"IncludeComputersInSet\": [\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeComputerGroups\":[\r\n        {\r\n            \"Id\":\"string\"\r\n        }\r\n    ],\r\n    \"IncludeADComputerGroups\": [\r\n        {\r\n             \"GroupName\":\"string\",\r\n             \"Sid\":\"\"\r\n        }\r\n    ],\r\n    \"LocalGroups\": [\r\n        {\r\n            \"GroupName\":\"string\"\r\n        }\r\n    ]\r\n}"
				},
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/Policies/{{PolicyId}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"Policies",
						"{{PolicyId}}"
					]
				},
				"description": "This method updates a policy with new values of various fields."
			},
			"response": []
		},
		{
			"name": "Delete policy",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/Policies/{{PolicyId}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"Policies",
						"{{PolicyId}}"
					]
				},
				"description": "This method deletes a Policy."
			},
			"response": []
		},
		{
			"name": "Get computer groups",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/ComputerGroups?$filter={{Filter}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"ComputerGroups"
					],
					"query": [
						{
							"key": "$filter",
							"value": "{{Filter}}",
							"description": "A query that filters results according to part of the Computer Group name.\n\nType: String\n\nValid values: Either of the following:\n\n'Name' - allowed operators\n\n'Contains' - part of the Computer Group name\n\nMandatory: No\n\nExample: https://<EPM_Server>/EPM/API/<Version>/Sets/<SetId>/ComputerGroups?$filter=contains(Name,'MyGroup')\n"
						}
					]
				},
				"description": "This method retrieves the Computer Groups from a Set."
			},
			"response": []
		},
		{
			"name": "Get computers",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"description": "Required after logging in via EPM Authentication",
						"key": "Authorization",
						"type": "text",
						"value": "basic {{AuthToken}}"
					},
					{
						"description": "Required after logging in via Windows Authentication",
						"key": "VFUser",
						"type": "text",
						"value": "{{AuthToken}}"
					}
				],
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/Computers?$filter={{Filter}}",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"Computers"
					],
					"query": [
						{
							"key": "$filter",
							"value": "{{Filter}}",
							"description": "ComputerName\n\nFilters by name.\n\nType: String\n\nValid value: Valid computer name\n\nValid operators: Valid operators in $filter:\n\neq\nin\ncontains\nDefault value: Blank (all)\n\nMandatory: No\n\nExamples:\n\n \n\nMake sure there are no spaces around the '='. \"$filter = ComputerName...\" is rejected with an error.\n\nThe following example returns the computer whose name is 'comp01'.\n\n \t\nhttps://<EPM_Server>/EPM/API/<Version>/Sets/<SetId>/Computers?$filter=ComputerName eq 'comp01'\nThe following example returns computers whose names are either 'comp01' or 'comp02'.\n\n \t\nhttps://<EPM_Server>/EPM/API/<Version>/Sets/<SetId>/Computers?$filter=ComputerName in('comp01', 'comp02')\nThe following example returns computers whose computer name contains '01'. For example, 'comp01', 'desktop01', '101-server'.\n\n \t\nhttps://<EPM_Server>/EPM/API/<Version>/Sets/<SetId>/Computers?$filter=contains(ComputerName, '01')\nFor examples of URLs that include ComputerName, Platform, and Status, see the relevant parameter examples below.\n\nPlatform\n\nFilters by operating system.\n\nType: String\n\nValid values: Windows/MacOS\n\nValid operators: Valid operators in $filter:\n\neq\nin\nDefault value: Blank (all)\n\nMandatory: No\n\nExamples:\n\n \n\nMake sure there are no spaces around the '='. \"$filter = Platform...\" is rejected with an error.\n\nThe following example returns MacOS computers whose name is either 'comp01' or 'comp02'.\n\n \t\nhttps://<EPM_Server>/EPM/API/<Version>/Sets/<SetId>/Computers?$filter=Platform eq 'MacOS' and ComputerName in('comp01', 'comp02')\nFor examples of URLs that include ComputerName, Platform, and Status, see the relevant parameter examples below.\n\nStatus\n\nFilters by computer status.\n\nType: String\n\nValid values: Alive/Disconnected/Initializing/Support/Upgrading\n\nValid operators: Valid operators in $filter:\n\neq\nin\nDefault value: Blank (all)\n\nMandatory: No\n\nExamples:\n\n \n\nMake sure there are no spaces around the '='. \"$filter = Status...\" is rejected with an error.\n\nThe following example returns computers whose status is either 'Disconnected' or 'Support'.\n\n \t\nhttps://<EPM_Server>/EPM/API/<Version>/Sets/<SetId>/Computers?$filter=Status in('Disconnected', 'Support')\nThe following example returns computers whose platform is 'Windows' and status is 'Alive'.\n\n \t\nhttps://<EPM_Server>/EPM/API/<Version>/Sets/<SetId>/Computers?$filter=Platform eq 'Windows' and Status eq 'Alive'\noffset\n\nA query that sets the number of computers to skip.\n\nType: Number\n\nValid value: 0 (zero) or higher\n\nMandatory: No\n\nExample:\n\nThe following example returns items 101-120 from the collection of computers.\n\n \t\nhttps://<EPM_Server>/EPM/API/<Version>/Sets/<SetId>/Computers?offset=100&limit=20\nlimit\n\nA query that sets the number of computers to return.\n\nType: Number\n\nValid value: Less than 5000\n\nMandatory: No"
						}
					]
				},
				"description": "This method retrieves the computers from a Set."
			},
			"response": []
		},
		{
			"name": "Update ransomware mode",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "basic {{AuthToken}}",
						"description": "Required after logging in via EPM Authentication",
						"type": "text"
					},
					{
						"key": "VFUser",
						"value": "{{AuthToken}}",
						"description": "Required after logging in via Windows Authentication",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"Mode\":\"string\"\r\n}"
				},
				"url": {
					"raw": "https://{{EPMServer}}/EPM/API/{{Version}}/Sets/{{SetId}}/Policies/Ransomware",
					"protocol": "https",
					"host": [
						"{{EPMServer}}"
					],
					"path": [
						"EPM",
						"API",
						"{{Version}}",
						"Sets",
						"{{SetId}}",
						"Policies",
						"Ransomware"
					]
				},
				"description": "This method sets the Ransomware protection mode."
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}